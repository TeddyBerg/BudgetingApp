<Application
    x:Class="Sunsets.Application.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animate="clr-namespace:Sunsets.Application.Animations"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Sunsets.Application"
    xmlns:mvvm="clr-namespace:Sunsets.Application.MVVM"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    d1p1:Ignorable="d"
    StartupUri="View/MainWindow.xaml">
    <Application.Resources>
        <BitmapImage x:Key="Checkmark" UriSource="pack://application:,,,/Icons;component/64px/Checkmark.png" />


        <mvvm:BangConverter x:Key="Bang" />
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <BitmapImage x:Key="LivingExpense" UriSource="Images/LivingExpense.png" />
        <BitmapImage x:Key="ExerciseExpense" UriSource="Images/Exercise.png" />
        <BitmapImage x:Key="Groceries" UriSource="Images/Groceries.png" />
        <BitmapImage x:Key="Monthly" UriSource="Images/Monthly.png" />
        <BitmapImage x:Key="SelfCare" UriSource="Images/Self-Care.png" />
        <BitmapImage x:Key="Things" UriSource="Images/Things.png" />
        <DropShadowEffect
            x:Key="DropShadow.Hard"
            BlurRadius="5"
            Opacity=".3"
            ShadowDepth="0" />
        <DropShadowEffect
            x:Key="DropShadow.Medium"
            BlurRadius="10"
            Opacity=".3"
            ShadowDepth="0" />
        <Color x:Key="Primary">#fffb3d</Color>
        <Color x:Key="Primary.Dark">#fffb3d</Color>
        <Color x:Key="Primary.Translucent">#77fffb3d</Color>

        <Color x:Key="Secondary">#ff38a8</Color>
        <Color x:Key="Secondary.Light">#FFBBDD</Color>
        <Color x:Key="Secondary.Dark">#4E0039</Color>
        <Color x:Key="Secondary.Translucent">#77ff38a8</Color>


        <SolidColorBrush x:Key="Brushes.Primary" Color="{StaticResource Primary}" />
        <SolidColorBrush x:Key="Brushes.Primary.Translucent" Color="{StaticResource Primary.Translucent}" />
        <SolidColorBrush x:Key="Brushes.Primary.Dark" Color="{StaticResource Primary.Dark}" />

        <SolidColorBrush x:Key="Brushes.Secondary" Color="{StaticResource Secondary}" />
        <SolidColorBrush x:Key="Brushes.Secondary.Dark" Color="{StaticResource Secondary.Dark}" />
        <SolidColorBrush x:Key="Brushes.Secondary.Light" Color="{StaticResource Secondary.Light}" />
        <SolidColorBrush x:Key="Brushes.Secondary.Translucent" Color="{StaticResource Secondary.Translucent}" />

        <SolidColorBrush x:Key="Neutral.Dark">#333</SolidColorBrush>
        <SolidColorBrush x:Key="Neutral.Medium">#555</SolidColorBrush>
        <SolidColorBrush x:Key="Neutral.MediumLight">#bbb</SolidColorBrush>

        <system:Double x:Key="FontSize.Medium">14</system:Double>
        <system:Double x:Key="FontSize.Large">18</system:Double>
        <system:Double x:Key="FontSize.VeryLarge">24</system:Double>

        <FontFamily x:Key="FontFamily.Standard">Segoe UI</FontFamily>


        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="WhiteSmoke" />
            <Setter Property="FontFamily" Value="{StaticResource FontFamily.Standard}" />
        </Style>


        <Style x:Key="Card" TargetType="Border">
            <Setter Property="Margin" Value="15" />
            <Setter Property="Padding" Value="15" />
            <Setter Property="Background" Value="#bfff" />
            <Setter Property="CornerRadius" Value="3" />
            <Setter Property="BorderBrush" Value="{StaticResource Brushes.Primary}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Effect" Value="{StaticResource DropShadow.Medium}" />
        </Style>

        <Style x:Key="Button.Background" TargetType="Button">
            <Setter Property="Padding" Value="5" />
            <Setter Property="Background" Value="{StaticResource Brushes.Primary}" />
            <Setter Property="Border.CornerRadius" Value="4" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource Brushes.Primary.Dark}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="Gainsboro" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="Button.Background.White"
            BasedOn="{StaticResource Button.Background}"
            TargetType="Button">
            <Setter Property="Background" Value="White" />
        </Style>

        <Style x:Key="Button.Foreground" TargetType="Button">
            <Setter Property="Padding" Value="5" />
            <Setter Property="Border.CornerRadius" Value="4" />
            <Setter Property="Foreground" Value="#aeee" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource Brushes.Primary.Dark}" />
                                <Setter Property="BorderBrush" Value="{StaticResource Brushes.Primary.Dark}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gainsboro" />
                                <Setter Property="BorderBrush" Value="Gainsboro" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Duration x:Key="Short">00:00:00.1</Duration>
        <Duration x:Key="Medium">00:00:00.25</Duration>
        <Duration x:Key="Long">00:00:00.5</Duration>

        <QuadraticEase x:Key="Ease" EasingMode="EaseInOut" />

        <Style TargetType="ListView">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Background" Value="#bfff" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <ControlTemplate.Resources />
                                    <Border
                                        x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True" />
                                                <Condition Property="IsSelected" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <animate:BackgroundAnimation To="White" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.EnterActions>
                                            <MultiTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <animate:BackgroundAnimation To="#bfff" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.ExitActions>
                                        </MultiTrigger>


                                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <animate:BackgroundAnimation FillBehavior="Stop" To="WhiteSmoke" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>

                                        <Trigger Property="IsSelected" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <animate:BackgroundAnimation FillBehavior="HoldEnd" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation
                                                            EasingFunction="{StaticResource Ease}"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(Border.Margin)"
                                                            To="0,0,-4,0"
                                                            Duration="00:00:00.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>

                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <animate:BackgroundAnimation FillBehavior="Stop" To="#bfff" />
                                                        <ThicknessAnimation
                                                            EasingFunction="{StaticResource Ease}"
                                                            FillBehavior="Stop"
                                                            Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(Border.Margin)"
                                                            To="0"
                                                            Duration="00:00:00.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <ItemsPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="TransparentComboBox" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Popup
                    x:Name="PART_Popup"
                    Grid.ColumnSpan="2"
                    Margin="1"
                    AllowsTransparency="True"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Border
                        x:Name="DropDownBorder"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="OpaqueRect"
                                        Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                        Fill="{Binding Background, ElementName=DropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton
                    x:Name="toggleButton"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="ClickMode" Value="Press" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border
                                            x:Name="templateRoot"
                                            BorderBrush="White"
                                            BorderThickness="0,0,0,1"
                                            SnapsToDevicePixels="True">
                                            <Border
                                                x:Name="splitBorder"
                                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                                Margin="0"
                                                HorizontalAlignment="Right"
                                                BorderBrush="Transparent"
                                                BorderThickness="1"
                                                SnapsToDevicePixels="True">
                                                <Path
                                                    x:Name="Arrow"
                                                    Margin="0"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
                                                    Fill="#FF606060" />
                                            </Border>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FFABADB3" />
                                                <Setter TargetName="splitBorder" Property="Background" Value="Transparent" />
                                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="Transparent" />
                                            </MultiDataTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Arrow" Property="Fill" Value="Black" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="templateRoot" Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0" Color="#FFECF4FC" />
                                                            <GradientStop Offset="1" Color="#FFDCECFC" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF7EB4EA" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF7EB4EA" />
                                                <Setter TargetName="splitBorder" Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0" Color="#FFEBF4FC" />
                                                            <GradientStop Offset="1" Color="#FFDCECFC" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="#FF7EB4EA" />
                                            </MultiDataTrigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="Arrow" Property="Fill" Value="Black" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="templateRoot" Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0" Color="#FFDAECFC" />
                                                            <GradientStop Offset="1" Color="#FFC4E0FC" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF569DE5" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF569DE5" />
                                                <Setter TargetName="splitBorder" Property="Background" Value="Blue" />
                                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="#FF569DE5" />
                                            </MultiDataTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="Arrow" Property="Fill" Value="#8fff" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="templateRoot" Property="Background" Value="#FFF0F0F0" />
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FFD9D9D9" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="templateRoot" Property="Background" Value="White" />
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FFBFBFBF" />
                                                <Setter TargetName="splitBorder" Property="Background" Value="Transparent" />
                                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="Transparent" />
                                            </MultiDataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    IsHitTestVisible="False"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasItems" Value="False">
                    <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="True" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                    <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>